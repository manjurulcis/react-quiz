{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this2 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from \"prop-types\";\nimport TheIcon from \"./TheIcon\";\nimport * as Styles from \"./Style/Style\";\n\nvar RadioGroup = function (_Component) {\n  _inherits(RadioGroup, _Component);\n\n  var _super = _createSuper(RadioGroup);\n\n  function RadioGroup(props) {\n    var _this;\n\n    _classCallCheck(this, RadioGroup);\n\n    _this = _super.call(this, props);\n\n    _this.getSelection = function (value) {\n      var selection = value;\n\n      _this.setState({\n        selection: selection\n      });\n\n      _this.props.getChecked(value);\n    };\n\n    _this.setChildrenProps = function () {\n      return React.Children.map(_this.props.children, function (child) {\n        return React.cloneElement(child, {\n          selection: _this.state.selection,\n          getSelection: _this.getSelection,\n          RadioStyle: _this.props.RadioStyle,\n          IconStyle: _this.props.IconStyle,\n          labelStyle: _this.props.labelStyle,\n          coreStyle: _this.props.coreStyle\n        });\n      });\n    };\n\n    _this.render = function () {\n      return React.createElement(View, {\n        style: [Styles.RadioGroupStyle.main, _this.props.RadioGroupStyle]\n      }, _this.setChildrenProps());\n    };\n\n    console.log(props);\n    var _selection = \"\";\n    _this.state = {\n      selection: _selection\n    };\n    _this.setChildrenProps = _this.setChildrenProps.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  return RadioGroup;\n}(Component);\n\nexport var Radio = function Radio(_ref) {\n  var iconGroup = _ref.iconGroup,\n      iconName = _ref.iconName,\n      selection = _ref.selection,\n      label = _ref.label,\n      value = _ref.value,\n      getSelection = _ref.getSelection,\n      RadioStyle = _ref.RadioStyle,\n      IconStyle = _ref.IconStyle,\n      labelStyle = _ref.labelStyle,\n      coreStyle = _ref.coreStyle;\n  var selected = selection === value;\n  return React.createElement(View, null, React.createElement(TouchableOpacity, {\n    onPress: getSelection.bind(_this2, value),\n    style: [Styles.RadioStyle.main, RadioStyle]\n  }, React.createElement(View, {\n    style: [Styles.IconStyle.main, IconStyle]\n  }, React.createElement(TheIcon, {\n    iconGroup: iconGroup,\n    iconName: iconName,\n    selected: selected,\n    style: coreStyle\n  })), React.createElement(Text, {\n    style: [Styles.labelStyle.main, labelStyle]\n  }, label)));\n};\nRadio.propTypes = {\n  iconName: PropTypes.string,\n  selection: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  selected: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  getSelection: PropTypes.func\n};\nRadio.defaultProps = {\n  iconGroup: \"MaterialIcons\",\n  iconName: \"lens\",\n  selected: false\n};\nRadioGroup.propTypes = {\n  RadioStyle: PropTypes.object,\n  IconStyle: PropTypes.object,\n  labelStyle: PropTypes.object,\n  coreStyle: PropTypes.object,\n  getChecked: PropTypes.func,\n  RadioGroupStyle: PropTypes.object\n};\nRadioGroup.defaultProps = {\n  RadioStyle: {},\n  IconStyle: {\n    backgroundColor: \"transparent\"\n  },\n  labelStyle: {},\n  coreStyle: {\n    fontSize: 20,\n    alignSelf: \"center\"\n  },\n  RadioGroupStyle: {}\n};\nexport default RadioGroup;","map":{"version":3,"sources":["/Users/manzurulhaque/Desktop/DEVELOPMENT/react-quiz/node_modules/react-native-radio-input/Components/main.js"],"names":["React","Component","PropTypes","TheIcon","Styles","RadioGroup","props","getSelection","value","selection","setState","getChecked","setChildrenProps","Children","map","children","child","cloneElement","state","RadioStyle","IconStyle","labelStyle","coreStyle","render","RadioGroupStyle","main","console","log","bind","Radio","iconGroup","iconName","label","selected","propTypes","string","oneOfType","number","bool","isRequired","func","defaultProps","object","backgroundColor","fontSize","alignSelf"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {View, Text, TouchableOpacity} from \"react-native\";\nimport PropTypes from \"prop-types\"\nimport TheIcon from \"./TheIcon\";\nimport * as Styles from \"./Style/Style\";\n\nclass RadioGroup extends Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n        let selection = \"\"\n        this.state = {\n            selection\n        }\n        this.setChildrenProps = this\n            .setChildrenProps\n            .bind(this)\n    }\n    /**\n *getSelection\n *This implements the selection\n *\n * @memberof RadioGroup\n */\n    getSelection = (value) => {\n        let selection = value;\n        this.setState({selection})\n        this\n            .props\n            .getChecked(value)\n\n    }\n    setChildrenProps = () => {\n        return React\n            .Children\n            .map(this.props.children, child => {\n                return React.cloneElement(child, {\n                    selection: this.state.selection,\n                    getSelection: this.getSelection,\n                    RadioStyle: this.props.RadioStyle,\n                    IconStyle: this.props.IconStyle,\n                    labelStyle: this.props.labelStyle,\n                    coreStyle: this.props.coreStyle\n                })\n            })\n\n    }\n\n    render = () => {\n        return (\n            <View style={[Styles.RadioGroupStyle.main, this.props.RadioGroupStyle]}>\n                {this.setChildrenProps()}\n            </View>\n        )\n    }\n}\n\nexport const Radio = ({\n    iconGroup,\n    iconName,\n    selection,\n    label,\n    value,\n    getSelection,\n    RadioStyle,\n    IconStyle,\n    labelStyle,\n    coreStyle\n}) => {\n\n    let selected = selection === value;\n\n    return (\n        <View>\n            <TouchableOpacity\n                onPress={getSelection.bind(this, value)}\n                style={[Styles.RadioStyle.main, RadioStyle]}>\n                <View style={[Styles.IconStyle.main, IconStyle]}>\n                    <TheIcon\n                        iconGroup={iconGroup}\n                        iconName={iconName}\n                        selected={selected}\n                        style={coreStyle}/>\n                </View>\n                <Text style={[Styles.labelStyle.main, labelStyle]}>{label}</Text>\n            </TouchableOpacity>\n        </View>\n    )\n}\n\nRadio.propTypes = {\n    iconName: PropTypes.string,\n    selection: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    selected: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    value: PropTypes\n        .oneOfType([PropTypes.string, PropTypes.number])\n        .isRequired,\n    getSelection: PropTypes.func\n\n}\nRadio.defaultProps = {\n    iconGroup: \"MaterialIcons\",\n    iconName: \"lens\",\n    selected: false\n\n}\n\nRadioGroup.propTypes = {\n\n    RadioStyle: PropTypes.object,\n    IconStyle: PropTypes.object,\n    labelStyle: PropTypes.object,\n    coreStyle: PropTypes.object,\n    getChecked: PropTypes.func,\n    RadioGroupStyle: PropTypes.object\n}\nRadioGroup.defaultProps = {\n    RadioStyle: {},\n    IconStyle: {\n        backgroundColor: \"transparent\"\n        //color: \"black\"\n    },\n    labelStyle: {\n        //color: \"black\"\n    },\n    coreStyle: {\n        fontSize: 20,\n        alignSelf: \"center\"\n    },\n    RadioGroupStyle: {}\n}\n\nexport default RadioGroup;\n"]},"metadata":{},"sourceType":"module"}