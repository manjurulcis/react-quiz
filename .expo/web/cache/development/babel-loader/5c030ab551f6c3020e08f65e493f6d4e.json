{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport axios from 'axios';\nimport RadioGroup, { Radio } from \"react-native-radio-input\";\n\nvar Questions = function Questions(_ref) {\n  var navigation = _ref.navigation;\n  var allQuestions = [{\n    question: \"What is part of a database that holds only one type of information?\",\n    options: [\"Report\", \"Field\", \"Record\", \"File\"]\n  }];\n  var dataUrl = 'http://localhost:8081/';\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputText = _useState2[0],\n      SetinputText = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedAns = _useState4[0],\n      SetSelectedAns = _useState4[1];\n\n  var showNextBtn = function showNextBtn() {\n    if (showNextBtn) {\n      return React.createElement(TouchableOpacity, {\n        style: QuizStyle.nextBtnDiv,\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        }\n      }, React.createElement(Text, {\n        style: QuizStyle.nextBtn\n      }, \"Submit\"));\n    }\n  };\n\n  {}\n\n  var getOptions = function getOptions() {\n    return React.createElement(View, null, React.createElement(TextInput, {\n      onChangeText: SetinputText,\n      value: inputText\n    }), React.createElement(Text, {\n      style: QuizStyle.quizTitle\n    }, allQuestions[0].question), React.createElement(RadioGroup, {\n      getChecked: function getChecked(value) {\n        SetSelectedAns(value);\n      }\n    }, React.createElement(Radio, {\n      iconName: \"lens\",\n      label: \"Report\",\n      value: \"Report\"\n    }), React.createElement(Radio, {\n      iconName: \"lens\",\n      label: \"Field\",\n      value: \"Field\"\n    }), React.createElement(Radio, {\n      iconName: \"lens\",\n      label: \"Record\",\n      value: 'Record'\n    })), React.createElement(TouchableOpacity, {\n      style: QuizStyle.nextBtnDiv,\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      },\n      disabled: !selectedAns && !inputText\n    }, React.createElement(Button, {\n      disabled: !selectedAns && !inputText,\n      style: QuizStyle.nextBtn\n    }, \"Submit\"), console.log(selectedAns), console.log(inputText)));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: QuizStyle.container\n  }, React.createElement(View, {\n    style: QuizStyle.quizView\n  }, getOptions()));\n};\n\nvar QuizStyle = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#159DFF'\n  },\n  quizView: {\n    flex: 1,\n    paddingHorizontal: 40,\n    paddingVertical: 60,\n    position: 'relative'\n  },\n  quizTitle: {\n    fontSize: '30px',\n    color: 'white'\n  },\n  counter: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  options: {\n    padding: 10,\n    backgroundColor: 'black',\n    color: 'white'\n  },\n  rightAns: {\n    backgroundColor: \"green\",\n    color: 'white'\n  },\n  wrongAns: {\n    backgroundColor: \"red\",\n    color: 'white'\n  },\n  nextBtn: {\n    fontSize: '20px',\n    color: 'white',\n    textAlign: 'center'\n  },\n  nextBtnDiv: {\n    width: '100%',\n    backgroundColor: 'green',\n    marginTop: 20,\n    padding: 10,\n    borderRadius: 5\n  },\n  scoreContainer: {\n    flex: 1,\n    backgroundColor: '#212A43',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  scoreOuter: {\n    width: '90%',\n    backgroundColor: 'white',\n    padding: 10,\n    alignItems: 'center'\n  },\n  scoreInner: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  retryQuiz: {\n    width: '50%',\n    backgroundColor: '#007ACC',\n    color: 'white',\n    fontSize: '12px',\n    marginTop: 10,\n    padding: 10,\n    alignItems: 'center'\n  }\n});\nexport default Questions;","map":{"version":3,"sources":["/Users/manzurulhaque/Desktop/DEVELOPMENT/react-quiz/pages/questions.js"],"names":["React","useState","axios","RadioGroup","Radio","Questions","navigation","allQuestions","question","options","dataUrl","inputText","SetinputText","selectedAns","SetSelectedAns","showNextBtn","QuizStyle","nextBtnDiv","navigate","nextBtn","getOptions","quizTitle","value","console","log","container","quizView","StyleSheet","create","flex","backgroundColor","paddingHorizontal","paddingVertical","position","fontSize","color","counter","flexDirection","alignItems","padding","rightAns","wrongAns","textAlign","width","marginTop","borderRadius","scoreContainer","justifyContent","scoreOuter","scoreInner","retryQuiz"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View ,SafeAreaView, Image,Button,Alert , TouchableOpacity,Pressable,Modal,Text,StyleSheet, TextInput } from 'react-native';\nimport axios from 'axios';\nimport RadioGroup,{Radio} from \"react-native-radio-input\";\n\n\n\nconst Questions = ({ navigation}) => {\n    \n    const allQuestions = [\n        {\n            question: \"What is part of a database that holds only one type of information?\",\n            options: [\"Report\",\"Field\",\"Record\",\"File\"],\n           \n        }\n    ];\n\n    const dataUrl = 'http://localhost:8081/';\n      const [inputText, SetinputText] = useState(null);\n    const [selectedAns, SetSelectedAns] = useState(null);\n    \n\n   \n    const showNextBtn = () => {\n        if(showNextBtn){\n            return(\n                <TouchableOpacity \n                style={QuizStyle.nextBtnDiv}\n               \n               onPress={()=> navigation.navigate('Home')}\n              \n                >\n                    <Text style={QuizStyle.nextBtn}>Submit</Text>\n                \n                </TouchableOpacity>\n            )\n        }\n    }\n\n \n   \n\n\n     {/* Options */}\n    const getOptions= () => {\n   \n\n       \n\n        return(\n            \n            <View>\n\n                <TextInput\n                    // style={styles.input}\n                    onChangeText={SetinputText}\n                    value={inputText}\n                />\n                \n\n                <Text style={QuizStyle.quizTitle}>\n                    {allQuestions[0].question}\n                 \n                 \n                 </Text>\n                \n                <RadioGroup getChecked={(value)=>{SetSelectedAns(value)}}>\n                    <Radio iconName={\"lens\"} label={\"Report\"} value={\"Report\"}/>\n                    <Radio iconName={\"lens\"} label={\"Field\"} value={\"Field\"}/>\n                    <Radio iconName={\"lens\"} label={\"Record\"} value={'Record'}/>\n                </RadioGroup>\n\n                <TouchableOpacity \n                style={QuizStyle.nextBtnDiv}\n              \n               onPress={()=> navigation.navigate('Home')}\n               disabled = {!selectedAns && !inputText}\n                >\n                    <Button disabled={!selectedAns && !inputText} style={QuizStyle.nextBtn}>Submit</Button>\n                    {console.log(selectedAns)}\n                    {console.log(inputText)}\n                \n                </TouchableOpacity>\n\n                \n            </View>\n        )\n    \n    }\n\n\n    return(\n\n        <SafeAreaView style={QuizStyle.container}>\n\n        <View style={QuizStyle.quizView}>\n         \n\n\n             {/* Options */}\n             {getOptions()}\n        </View>\n\n        </SafeAreaView>\n\n     \n    )\n\n}\n\nconst QuizStyle = StyleSheet.create({\n\n    container:{\n        flex: 1,\n        backgroundColor: '#159DFF',\n    \n    },\n    quizView:{\n        flex: 1,\n        paddingHorizontal: 40,\n        paddingVertical: 60,\n        position: 'relative'\n    },\n    quizTitle:{\n        fontSize: '30px',\n        color: 'white'\n    },\n    counter:{\n        flexDirection: 'row',\n        alignItems: 'flex-start'\n    },\n    options:{\n        padding: 10,\n        backgroundColor: 'black',\n        color:'white'\n    },\n    rightAns:{\n        backgroundColor: \"green\",\n        color: 'white'\n    },\n    wrongAns:{\n        backgroundColor: \"red\",\n        color: 'white'\n    },\n    nextBtn:{\n        fontSize: '20px',\n        color: 'white',\n        textAlign: 'center'\n\n    },\n    nextBtnDiv:{\n        width: '100%',\n        backgroundColor: 'green',\n        marginTop: 20,\n        padding: 10,\n        borderRadius: 5\n    },\n    scoreContainer:{\n        flex: 1,\n        backgroundColor: '#212A43',\n        justifyContent: 'center',\n        alignItems:'center'\n\n    },\n    scoreOuter: {\n        width: '90%',\n        backgroundColor: 'white',\n        padding : 10,\n        alignItems: 'center'\n    },\n    scoreInner:{\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    retryQuiz:{\n        width: '50%',\n        backgroundColor: '#007ACC',\n        color: 'white',\n        fontSize: '12px',\n        marginTop: 10,\n        padding: 10,\n        alignItems: 'center'\n    }\n\n\n\n})\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}